old.dir <-getwd()
dir.create(testdir)
dir.create("testdir"")
swirl()
dir.create("testdir")
setwd("testdir")
file.create(mytest.R)
file.create("mytest.R")
ls
()
ls()
list.files()
file.exists("myTest.R")
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path("mytest3.R", "folder1", "folder2")
?file.path
file.path("/folder1.folder2/mytest3.R")
info()
file.path(c("folder1"", "folder2"", "mytest3.R""))
file.path(c("folder1", "folder2", "mytest3.R"))
file.path("folder1", "folder2")
?dir.create
dir.create("testdir2/testdir3", recursive = TRUE)
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
dir.create("testdir4/testdir5", recursive = TRUE)
getwd()
dir.create(file.path("testdir6", "testdir7"), recursive = TRUE)
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
setwd(old.dir)
swirl()
swirl()
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10, by=0.5)
my_seq <- seq(5,10, length=30)
length(my_seq)
seq(1:length(my_seq))
1:length(my_seq)
seq(along.with= my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times = 10)
rep(c(0,1,2), each=10)
swirl()
num_vect <- c(0.5,55,-10,6)
tf <- num_vect<1
tf
num_vect >6
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char, "Shubhra")
my-name <- c(my_char, "Shubhra")
my_name <- c(my_char, "Shubhra")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(c(1:3), c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x*3
y <-rnorm(1000)
z <- rep(NA, 1000)
my_data = sample(c(y,z), 100)
my_data =<- sample(c(y,z), 100)
my_data <- sample(c(y,z), 100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y<- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11,bar=2, norf =NA)
vect
names(vect)
vect2 <- c(11,2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector = c(1:20)
my_vector = 1:20
my_vector <-c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector ) <- c(4,5)
dim(my_cector)
dim(my_vector)
attributes(my_vector)
my_vector
length(my_vector)
class(my_vector)
a = c(1:20)
class(a)
a <- c(1:20)
class(a)
a
a  <- 1:20
class(a)
a
my_matrix <- my_vector
?matrix
my_matrx = matrix(data = 1:20, nrow = 5, ncol =5)
my_matrx <- matrix(data = 1:20, nrow = 5, ncol =5)
my_matrx <- matrix(1:20, nrow = 5, ncol =5)
my_matrx <- matrix(data = c(1:20_, nrow = 5, ncol =5)
my_matrx <- matrix(data = c(1:20), nrow = 5, ncol =5)
my_matrx <- matrix(1:20, nrow = 4, ncol =5)
my_matrx <- matrix(data = c(1:20), nrow = 4, ncol =5)
my_matrix2 <- matrix(data = c(1:20), nrow = 4, ncol =5)
my_matrix2 <- matrix(data = 1:20, nrow = 4, ncol =5)
my_matrix2 <- matrix(1:20, nrow = 4, ncol =5)
my_matrix2
info()
my_matrix2 <- matrix(1:20, 4, 5)
my_matrix2 <- matrix(data = c[1:20], nrow=4, ncol=5)
my_matrix2 <- matrix(data = c(1:20), nrow=4, ncol=5)
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
my_matrix2 <- matrix(1:20, nrow=5, ncol=4)
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
identical (my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
patients
cbind(patients, my_matrix)
my_data <- data.frame((patients, my_matrix))
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
TRUE ==TRUE
(FALSE=TRUE)==FALSE
(FALSE==TRUE)==FALSE
6==7
6<7
10<-10
10<=10
5 != 7
!(5 ==7)
false&FALSE
FALSE&FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | C(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 | > 8 || 6!= 8 && 4>3.9
5  > 8 || 6!= 8 && 4>3.9
isTRUE(6>4)
identical("twins", "twins")
xor(5--6, !FALSE)
xor(5==6, !FALSE)
inst <- sampme(10)
inst <- sample(10)
ints <- sample(10)
integer()
ints
ints>5
which(ints >7)
any(ints <0)
all(ints>0)
cls
swirl()
load.packages("swirl")
load("swirl")
library("swirl")
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function("My first function!")
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(num=5, divisor =11)
remainder(4, div=2)
args(remainder)
submit()
evaluate(sd, c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submt()
submit()
telegram()
submit()
mad_libs(place = "India", adjective = "ttt")
submit()
"I" %p% "love" %p% "R"
I %p% love %p% R
"I" %p% ("love" %p% "R")
"I" %p% "love" %p% "R"
"I" %p% "love" %p% "R!"
swirl()
1:20
pi:10
15:1
?`:`
seq(1:20)
seq(1, 20)
seq (0, 10, by=0.5)
my_seq <- seq (0, 10, length =30)
my_seq <- seq (5, 10, length =30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2), times =10)
rep(c(0,1,2), each=10)
num_vect <- c(0,5, 55, -10, 6)
num_vect <- (0,5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect <1
tf
num_vect >=6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char, "Shubhra")
my_name <- c(my_char, "Shubhra")
my_name
paste(my_name, collapse = " ")
paste("Hello", "World!", sep = " ")
paste("Hello", "world!", sep = " ")
paste(c(1:3), c("X", "Y", "Z"), sep = "")
paste(LETTERS,1:4, sep = "")
paste(LETTERS,1:4, sep = "-")
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect <1
tf
num_vect >=6
my-char <- c("My", "name", "is")
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Shubhra")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(c(1:3), c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
swirl()
swirl()
num_vect <- (0.5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect <1
tf
num_vect >=6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name = c(my_char, "Shubhra")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(c(1:3), c("X", "Y", "Z"), sep = "")
paste(LETTERS,1:4, sep = "-")
library("swirl")
swirl()
exit
library("swirl")
swirl()
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
x <- rep(NA, 1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
0
exit
library("swirl")
swirl()
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(1,3,5,7)]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo=11, bar=2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical (vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
library("swirl")
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my-vector
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix (data = 1:20, nrow=4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test".
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_lisr)
class(cls_list)
as.character((cls_list))
as.character(cls_list)
sapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags["orange"])
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[,19:23]
range(1:23)
lapply(flag_shapes, range())
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- unique(flags, unique
)
)
unique_vals <- unique(flags, unique)
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sappply(flags, unique())
sappply(flags, unique
)
sapply(flags, unique)
lapply(unique_vals, function(elem){elem[2]})
library("swirl")
swirl()
dim(flags)
attributes(flag_colors)
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok
ok()
sapply(flags,length)
sapply(flags,class)
vapply(flags,class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flasg$population, flags$red, summary)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library("swirl")
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 ==7
6<7
10 <= 10
5 != 7
!(5 == 7)
FALSE&FALSE
TRUE & C(TRUE, FLASE, FALSE)
TRUE & c(TRUE, FLASE, FALSE)
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5>8 || 6 !=8 && 4>3.9
isTRUE(6>4)
identical("twins", "twins")
xor(5 ==6, !FALSE)
ints <- sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
library("swirl")
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first
| function!')
boring_function('My first function!')
boring_function("My first function!")
boring_function
submit()
my_mean(c(4, 5, 10))
submit()
remainder(5)
remainder*11,
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd,c(1.4, 3.6, 7.9, 8.8) )
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, 6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("ndasdnas", "snkjhu")
submit()
submit()
mad_libs(dd, jj, jjj)
mad_libs(place =dd, adjective = jj, noun =jjj)
mad_libs("dd", "jj", "jjj")
submit()
"I" %p%"love"%p%"R!"
setwd("~/Documents/AllCodeBase/LearningR/Week2")
getwd()
list.files()
complete("specdata", 30:25)
source('~/Documents/AllCodeBase/LearningR/Week2/complete.R')
complete("specdata", 30:25)
source('~/Documents/AllCodeBase/LearningR/Week2/complete.R')
complete("specdata", 30:25)
source('~/Documents/AllCodeBase/LearningR/Week2/complete.R')
source('~/Documents/AllCodeBase/LearningR/Week2/complete.R')
complete("specdata", 30:25)
complete("specdata", 3)
source('~/Documents/AllCodeBase/LearningR/Week2/complete.R')
complete("specdata", 30:25)
source('~/Documents/AllCodeBase/LearningR/Week2/complete.R')
complete("specdata", 30:25)
complete("specdata", 3)
complete("specdata", c(2, 4, 8, 10, 12))
source('~/Documents/AllCodeBase/LearningR/Week2/complete.R')
source('~/Documents/AllCodeBase/LearningR/Week2/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/Documents/AllCodeBase/LearningR/Week2/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/Documents/AllCodeBase/LearningR/Week2/complete.R')
source('~/Documents/AllCodeBase/LearningR/Week2/complete.R')
source('~/Documents/AllCodeBase/LearningR/Week2/complete.R')
source('~/Documents/AllCodeBase/LearningR/Week2/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
